003:[CLASS] Class
003:[TYPE] Book
003:[INHERITS] inherits
003:[TYPE] IO
003:[LBRACE] {
004:[ID] title
004:[COLON] :
004:[TYPE] String
004:[SEMICOLON] ;
005:[ID] author
005:[COLON] :
005:[TYPE] String
005:[SEMICOLON] ;
007:[ID] initBook
007:[LPAREN] (
007:[ID] title_p
007:[COLON] :
007:[TYPE] String
007:[COMMA] ,
007:[ID] author_p
007:[COLON] :
007:[TYPE] String
007:[RPAREN] )
007:[COLON] :
007:[TYPE] Book
007:[LBRACE] {
008:[LBRACE] {
009:[ID] title
009:[ASSIGN] <-
009:[ID] title_p
009:[SEMICOLON] ;
010:[ID] author
010:[ASSIGN] <-
010:[ID] author_p
010:[SEMICOLON] ;
011:[ID] self
011:[SEMICOLON] ;
012:[RBRACE] }
013:[RBRACE] }
013:[SEMICOLON] ;
015:[ID] print
015:[LPAREN] (
015:[RPAREN] )
015:[COLON] :
015:[TYPE] Book
015:[LBRACE] {
016:[LBRACE] {
017:[ID] out_string
017:[LPAREN] (
017:[STRING] "title:      "
017:[RPAREN] )
017:[DOT] .
017:[ID] out_string
017:[LPAREN] (
017:[ID] title
017:[RPAREN] )
017:[DOT] .
017:[ID] out_string
017:[LPAREN] (
017:[STRING] "\n"
017:[RPAREN] )
017:[SEMICOLON] ;
018:[ID] out_string
018:[LPAREN] (
018:[STRING] "author:     "
018:[RPAREN] )
018:[DOT] .
018:[ID] out_string
018:[LPAREN] (
018:[ID] author
018:[RPAREN] )
018:[DOT] .
018:[ID] out_string
018:[LPAREN] (
018:[STRING] "\n"
018:[RPAREN] )
018:[SEMICOLON] ;
019:[ID] self
019:[SEMICOLON] ;
020:[RBRACE] }
021:[RBRACE] }
021:[SEMICOLON] ;
022:[RBRACE] }
022:[SEMICOLON] ;
024:[CLASS] Class
024:[TYPE] Article
024:[INHERITS] inherits
024:[TYPE] Book
024:[LBRACE] {
025:[ID] per_title
025:[COLON] :
025:[TYPE] String
025:[SEMICOLON] ;
027:[ID] initArticle
027:[LPAREN] (
027:[ID] title_p
027:[COLON] :
027:[TYPE] String
027:[COMMA] ,
027:[ID] author_p
027:[COLON] :
027:[TYPE] String
027:[COMMA] ,
028:[ID] per_title_p
028:[COLON] :
028:[TYPE] String
028:[RPAREN] )
028:[COLON] :
028:[TYPE] Article
028:[LBRACE] {
029:[LBRACE] {
030:[ID] initBook
030:[LPAREN] (
030:[ID] title_p
030:[COMMA] ,
030:[ID] author_p
030:[RPAREN] )
030:[SEMICOLON] ;
031:[ID] per_title
031:[ASSIGN] <-
031:[ID] per_title_p
031:[SEMICOLON] ;
032:[ID] self
032:[SEMICOLON] ;
033:[RBRACE] }
034:[RBRACE] }
034:[SEMICOLON] ;
036:[ID] print
036:[LPAREN] (
036:[RPAREN] )
036:[COLON] :
036:[TYPE] Book
036:[LBRACE] {
037:[LBRACE] {
038:[ID] self
038:[ATSIGN] @
038:[TYPE] Book
038:[DOT] .
038:[ID] print
038:[LPAREN] (
038:[RPAREN] )
038:[SEMICOLON] ;
039:[ID] out_string
039:[LPAREN] (
039:[STRING] "periodical:  "
039:[RPAREN] )
039:[DOT] .
039:[ID] out_string
039:[LPAREN] (
039:[ID] per_title
039:[RPAREN] )
039:[DOT] .
039:[ID] out_string
039:[LPAREN] (
039:[STRING] "\n"
039:[RPAREN] )
039:[SEMICOLON] ;
040:[ID] self
040:[SEMICOLON] ;
041:[RBRACE] }
042:[RBRACE] }
042:[SEMICOLON] ;
043:[RBRACE] }
043:[SEMICOLON] ;
045:[CLASS] Class
045:[TYPE] BookList
045:[INHERITS] inherits
045:[TYPE] IO
045:[LBRACE] {
050:[ID] isNil
050:[LPAREN] (
050:[RPAREN] )
050:[COLON] :
050:[TYPE] Bool
050:[LBRACE] {
050:[LBRACE] {
050:[ID] abort
050:[LPAREN] (
050:[RPAREN] )
050:[SEMICOLON] ;
050:[TRUE] true
050:[SEMICOLON] ;
050:[RBRACE] }
050:[RBRACE] }
050:[SEMICOLON] ;
052:[ID] cons
052:[LPAREN] (
052:[ID] hd
052:[COLON] :
052:[TYPE] Book
052:[RPAREN] )
052:[COLON] :
052:[TYPE] Cons
052:[LBRACE] {
053:[LPAREN] (
053:[LET] let
053:[ID] new_cell
053:[COLON] :
053:[TYPE] Cons
053:[ASSIGN] <-
053:[NEW] new
053:[TYPE] Cons
053:[IN] in
054:[ID] new_cell
054:[DOT] .
054:[ID] init
054:[LPAREN] (
054:[ID] hd
054:[COMMA] ,
054:[ID] self
054:[RPAREN] )
055:[RPAREN] )
056:[RBRACE] }
056:[SEMICOLON] ;
062:[ID] car
062:[LPAREN] (
062:[RPAREN] )
062:[COLON] :
062:[TYPE] Book
062:[LBRACE] {
062:[LBRACE] {
062:[ID] abort
062:[LPAREN] (
062:[RPAREN] )
062:[SEMICOLON] ;
062:[NEW] new
062:[TYPE] Book
062:[SEMICOLON] ;
062:[RBRACE] }
062:[RBRACE] }
062:[SEMICOLON] ;
068:[ID] cdr
068:[LPAREN] (
068:[RPAREN] )
068:[COLON] :
068:[TYPE] BookList
068:[LBRACE] {
068:[LBRACE] {
068:[ID] abort
068:[LPAREN] (
068:[RPAREN] )
068:[SEMICOLON] ;
068:[NEW] new
068:[TYPE] BookList
068:[SEMICOLON] ;
068:[RBRACE] }
068:[RBRACE] }
068:[SEMICOLON] ;
070:[ID] print_list
070:[LPAREN] (
070:[RPAREN] )
070:[COLON] :
070:[TYPE] Object
070:[LBRACE] {
070:[ID] abort
070:[LPAREN] (
070:[RPAREN] )
070:[RBRACE] }
070:[SEMICOLON] ;
071:[RBRACE] }
071:[SEMICOLON] ;
073:[CLASS] Class
073:[TYPE] Cons
073:[INHERITS] inherits
073:[TYPE] BookList
073:[LBRACE] {
074:[ID] xcar
074:[COLON] :
074:[TYPE] Book
074:[SEMICOLON] ;
075:[ID] xcdr
075:[COLON] :
075:[TYPE] BookList
075:[SEMICOLON] ;
079:[ID] isNil
079:[LPAREN] (
079:[RPAREN] )
079:[COLON] :
079:[TYPE] Bool
079:[LBRACE] {
079:[FALSE] false
079:[RBRACE] }
079:[SEMICOLON] ;
081:[ID] init
081:[LPAREN] (
081:[ID] hd
081:[COLON] :
081:[TYPE] Book
081:[COMMA] ,
081:[ID] tl
081:[COLON] :
081:[TYPE] BookList
081:[RPAREN] )
081:[COLON] :
081:[TYPE] Cons
081:[LBRACE] {
082:[LBRACE] {
083:[ID] xcar
083:[ASSIGN] <-
083:[ID] hd
083:[SEMICOLON] ;
084:[ID] xcdr
084:[ASSIGN] <-
084:[ID] tl
084:[SEMICOLON] ;
085:[ID] self
085:[SEMICOLON] ;
086:[RBRACE] }
087:[RBRACE] }
087:[SEMICOLON] ;
089:[ID] car
089:[LPAREN] (
089:[RPAREN] )
089:[COLON] :
089:[TYPE] Book
089:[LBRACE] {
089:[ID] xcar
089:[RBRACE] }
089:[SEMICOLON] ;
091:[ID] cdr
091:[LPAREN] (
091:[RPAREN] )
091:[COLON] :
091:[TYPE] BookList
091:[LBRACE] {
091:[ID] xcdr
091:[RBRACE] }
091:[SEMICOLON] ;
093:[ID] print_list
093:[LPAREN] (
093:[RPAREN] )
093:[COLON] :
093:[TYPE] Object
093:[LBRACE] {
094:[LBRACE] {
095:[CASE] case
095:[ID] xcar
095:[DOT] .
095:[ID] print
095:[LPAREN] (
095:[RPAREN] )
095:[OF] of
096:[ID] dummy
096:[COLON] :
096:[TYPE] Book
096:[DARROW] =>
096:[ID] out_string
096:[LPAREN] (
096:[STRING] "- dynamic type was Book -\n"
096:[RPAREN] )
096:[SEMICOLON] ;
097:[ID] dummy
097:[COLON] :
097:[TYPE] Article
097:[DARROW] =>
097:[ID] out_string
097:[LPAREN] (
097:[STRING] "- dynamic type was Article -\n"
097:[RPAREN] )
097:[SEMICOLON] ;
098:[ESAC] esac
098:[SEMICOLON] ;
099:[ID] xcdr
099:[DOT] .
099:[ID] print_list
099:[LPAREN] (
099:[RPAREN] )
099:[SEMICOLON] ;
100:[RBRACE] }
101:[RBRACE] }
101:[SEMICOLON] ;
102:[RBRACE] }
102:[SEMICOLON] ;
104:[CLASS] Class
104:[TYPE] Nil
104:[INHERITS] inherits
104:[TYPE] BookList
104:[LBRACE] {
105:[ID] isNil
105:[LPAREN] (
105:[RPAREN] )
105:[COLON] :
105:[TYPE] Bool
105:[LBRACE] {
105:[TRUE] true
105:[RBRACE] }
105:[SEMICOLON] ;
107:[ID] print_list
107:[LPAREN] (
107:[RPAREN] )
107:[COLON] :
107:[TYPE] Object
107:[LBRACE] {
107:[TRUE] true
107:[RBRACE] }
107:[SEMICOLON] ;
108:[RBRACE] }
108:[SEMICOLON] ;
111:[CLASS] Class
111:[TYPE] Main
111:[LBRACE] {
113:[ID] books
113:[COLON] :
113:[TYPE] BookList
113:[SEMICOLON] ;
115:[ID] main
115:[LPAREN] (
115:[RPAREN] )
115:[COLON] :
115:[TYPE] Object
115:[LBRACE] {
116:[LPAREN] (
116:[LET] let
116:[ID] a_book
116:[COLON] :
116:[TYPE] Book
116:[ASSIGN] <-
117:[LPAREN] (
117:[NEW] new
117:[TYPE] Book
117:[RPAREN] )
117:[DOT] .
117:[ID] initBook
117:[LPAREN] (
117:[STRING] "Compilers, Principles, Techniques, and Tools"
117:[COMMA] ,
118:[STRING] "Aho, Sethi, and Ullman"
118:[RPAREN] )
119:[IN] in
120:[LPAREN] (
120:[LET] let
120:[ID] an_article
120:[COLON] :
120:[TYPE] Article
120:[ASSIGN] <-
121:[LPAREN] (
121:[NEW] new
121:[TYPE] Article
121:[RPAREN] )
121:[DOT] .
121:[ID] initArticle
121:[LPAREN] (
121:[STRING] "The Top 100 CD_ROMs"
121:[COMMA] ,
122:[STRING] "Ulanoff"
122:[COMMA] ,
123:[STRING] "PC Magazine"
123:[RPAREN] )
124:[IN] in
125:[LBRACE] {
126:[ID] books
126:[ASSIGN] <-
126:[LPAREN] (
126:[NEW] new
126:[TYPE] Nil
126:[RPAREN] )
126:[DOT] .
126:[ID] cons
126:[LPAREN] (
126:[ID] a_book
126:[RPAREN] )
126:[DOT] .
126:[ID] cons
126:[LPAREN] (
126:[ID] an_article
126:[RPAREN] )
126:[SEMICOLON] ;
127:[ID] books
127:[DOT] .
127:[ID] print_list
127:[LPAREN] (
127:[RPAREN] )
127:[SEMICOLON] ;
128:[RBRACE] }
129:[RPAREN] )
130:[RPAREN] )
131:[RBRACE] }
131:[SEMICOLON] ;
132:[RBRACE] }
132:[SEMICOLON] ;
