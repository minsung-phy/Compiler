027:[CLASS] class
027:[TYPE] Main
027:[INHERITS] inherits
027:[TYPE] IO
027:[LBRACE] {
029:[ID] main
029:[LPAREN] (
029:[RPAREN] )
029:[COLON] :
029:[TYPE] Int
029:[LBRACE] {
030:[INTEGER] 0
031:[RBRACE] }
031:[SEMICOLON] ;
033:[ID] out
033:[COLON] :
033:[TYPE] Int
033:[ASSIGN] <-
034:[LBRACE] {
035:[ID] out_string
035:[LPAREN] (
035:[STRING] "2 is trivially prime.\n"
035:[RPAREN] )
035:[SEMICOLON] ;
036:[INTEGER] 2
036:[SEMICOLON] ;
037:[RBRACE] }
037:[SEMICOLON] ;
039:[ID] testee
039:[COLON] :
039:[TYPE] Int
039:[ASSIGN] <-
039:[ID] out
039:[SEMICOLON] ;
041:[ID] divisor
041:[COLON] :
041:[TYPE] Int
041:[SEMICOLON] ;
043:[ID] stop
043:[COLON] :
043:[TYPE] Int
043:[ASSIGN] <-
043:[INTEGER] 500
043:[SEMICOLON] ;
045:[ID] m
045:[COLON] :
045:[TYPE] Object
045:[ASSIGN] <-
046:[WHILE] while
046:[TRUE] true
046:[LOOP] loop
047:[LBRACE] {
049:[ID] testee
049:[ASSIGN] <-
049:[ID] testee
049:[PLUS] +
049:[INTEGER] 1
049:[SEMICOLON] ;
050:[ID] divisor
050:[ASSIGN] <-
050:[INTEGER] 2
050:[SEMICOLON] ;
052:[WHILE] while
053:[IF] if
053:[ID] testee
053:[LT] <
053:[ID] divisor
053:[MUL] *
053:[ID] divisor
054:[THEN] then
054:[FALSE] false
055:[ELSE] else
055:[IF] if
055:[ID] testee
055:[MINUS] -
055:[ID] divisor
055:[MUL] *
055:[LPAREN] (
055:[ID] testee
055:[DIV] /
055:[ID] divisor
055:[RPAREN] )
055:[EQUAL] =
055:[INTEGER] 0
056:[THEN] then
056:[FALSE] false
057:[ELSE] else
057:[TRUE] true
058:[FI] fi
058:[FI] fi
059:[LOOP] loop
060:[ID] divisor
060:[ASSIGN] <-
060:[ID] divisor
060:[PLUS] +
060:[INTEGER] 1
061:[POOL] pool
061:[SEMICOLON] ;
063:[IF] if
063:[ID] testee
063:[LT] <
063:[ID] divisor
063:[MUL] *
063:[ID] divisor
064:[THEN] then
065:[LBRACE] {
066:[ID] out
066:[ASSIGN] <-
066:[ID] testee
066:[SEMICOLON] ;
067:[ID] out_int
067:[LPAREN] (
067:[ID] out
067:[RPAREN] )
067:[SEMICOLON] ;
068:[ID] out_string
068:[LPAREN] (
068:[STRING] " is prime.\n"
068:[RPAREN] )
068:[SEMICOLON] ;
069:[RBRACE] }
070:[ELSE] else
071:[INTEGER] 0
072:[FI] fi
072:[SEMICOLON] ;
074:[IF] if
074:[ID] stop
074:[LTE] <=
074:[ID] testee
074:[THEN] then
075:[STRING] "halt"
075:[DOT] .
075:[ID] abort
075:[LPAREN] (
075:[RPAREN] )
076:[ELSE] else
077:[STRING] "continue"
078:[FI] fi
078:[SEMICOLON] ;
080:[RBRACE] }
081:[POOL] pool
081:[SEMICOLON] ;
083:[RBRACE] }
083:[SEMICOLON] ;
