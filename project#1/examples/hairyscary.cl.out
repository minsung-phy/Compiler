003:[CLASS] class
003:[TYPE] Foo
003:[INHERITS] inherits
003:[TYPE] Bazz
003:[LBRACE] {
004:[ID] a
004:[COLON] :
004:[TYPE] Razz
004:[ASSIGN] <-
004:[CASE] case
004:[ID] self
004:[OF] of
005:[ID] n
005:[COLON] :
005:[TYPE] Razz
005:[DARROW] =>
005:[LPAREN] (
005:[NEW] new
005:[TYPE] Bar
005:[RPAREN] )
005:[SEMICOLON] ;
006:[ID] n
006:[COLON] :
006:[TYPE] Foo
006:[DARROW] =>
006:[LPAREN] (
006:[NEW] new
006:[TYPE] Razz
006:[RPAREN] )
006:[SEMICOLON] ;
007:[ID] n
007:[COLON] :
007:[TYPE] Bar
007:[DARROW] =>
007:[ID] n
007:[SEMICOLON] ;
008:[ESAC] esac
008:[SEMICOLON] ;
010:[ID] b
010:[COLON] :
010:[TYPE] Int
010:[ASSIGN] <-
010:[ID] a
010:[DOT] .
010:[ID] doh
010:[LPAREN] (
010:[RPAREN] )
010:[PLUS] +
010:[ID] g
010:[DOT] .
010:[ID] doh
010:[LPAREN] (
010:[RPAREN] )
010:[PLUS] +
010:[ID] doh
010:[LPAREN] (
010:[RPAREN] )
010:[PLUS] +
010:[ID] printh
010:[LPAREN] (
010:[RPAREN] )
010:[SEMICOLON] ;
012:[ID] doh
012:[LPAREN] (
012:[RPAREN] )
012:[COLON] :
012:[TYPE] Int
012:[LBRACE] {
012:[LPAREN] (
012:[LET] let
012:[ID] i
012:[COLON] :
012:[TYPE] Int
012:[ASSIGN] <-
012:[ID] h
012:[IN] in
012:[LBRACE] {
012:[ID] h
012:[ASSIGN] <-
012:[ID] h
012:[PLUS] +
012:[INTEGER] 2
012:[SEMICOLON] ;
012:[ID] i
012:[SEMICOLON] ;
012:[RBRACE] }
012:[RPAREN] )
012:[RBRACE] }
012:[SEMICOLON] ;
014:[RBRACE] }
014:[SEMICOLON] ;
016:[CLASS] class
016:[TYPE] Bar
016:[INHERITS] inherits
016:[TYPE] Razz
016:[LBRACE] {
018:[ID] c
018:[COLON] :
018:[TYPE] Int
018:[ASSIGN] <-
018:[ID] doh
018:[LPAREN] (
018:[RPAREN] )
018:[SEMICOLON] ;
020:[ID] d
020:[COLON] :
020:[TYPE] Object
020:[ASSIGN] <-
020:[ID] printh
020:[LPAREN] (
020:[RPAREN] )
020:[SEMICOLON] ;
021:[RBRACE] }
021:[SEMICOLON] ;
024:[CLASS] class
024:[TYPE] Razz
024:[INHERITS] inherits
024:[TYPE] Foo
024:[LBRACE] {
026:[ID] e
026:[COLON] :
026:[TYPE] Bar
026:[ASSIGN] <-
026:[CASE] case
026:[ID] self
026:[OF] of
027:[ID] n
027:[COLON] :
027:[TYPE] Razz
027:[DARROW] =>
027:[LPAREN] (
027:[NEW] new
027:[TYPE] Bar
027:[RPAREN] )
027:[SEMICOLON] ;
028:[ID] n
028:[COLON] :
028:[TYPE] Bar
028:[DARROW] =>
028:[ID] n
028:[SEMICOLON] ;
029:[ESAC] esac
029:[SEMICOLON] ;
031:[ID] f
031:[COLON] :
031:[TYPE] Int
031:[ASSIGN] <-
031:[ID] a
031:[ATSIGN] @
031:[TYPE] Bazz
031:[DOT] .
031:[ID] doh
031:[LPAREN] (
031:[RPAREN] )
031:[PLUS] +
031:[ID] g
031:[DOT] .
031:[ID] doh
031:[LPAREN] (
031:[RPAREN] )
031:[PLUS] +
031:[ID] e
031:[DOT] .
031:[ID] doh
031:[LPAREN] (
031:[RPAREN] )
031:[PLUS] +
031:[ID] doh
031:[LPAREN] (
031:[RPAREN] )
031:[PLUS] +
031:[ID] printh
031:[LPAREN] (
031:[RPAREN] )
031:[SEMICOLON] ;
033:[RBRACE] }
033:[SEMICOLON] ;
035:[CLASS] class
035:[TYPE] Bazz
035:[INHERITS] inherits
035:[TYPE] IO
035:[LBRACE] {
037:[ID] h
037:[COLON] :
037:[TYPE] Int
037:[ASSIGN] <-
037:[INTEGER] 1
037:[SEMICOLON] ;
039:[ID] g
039:[COLON] :
039:[TYPE] Foo
039:[ASSIGN] <-
039:[CASE] case
039:[ID] self
039:[OF] of
040:[ID] n
040:[COLON] :
040:[TYPE] Bazz
040:[DARROW] =>
040:[LPAREN] (
040:[NEW] new
040:[TYPE] Foo
040:[RPAREN] )
040:[SEMICOLON] ;
041:[ID] n
041:[COLON] :
041:[TYPE] Razz
041:[DARROW] =>
041:[LPAREN] (
041:[NEW] new
041:[TYPE] Bar
041:[RPAREN] )
041:[SEMICOLON] ;
042:[ID] n
042:[COLON] :
042:[TYPE] Foo
042:[DARROW] =>
042:[LPAREN] (
042:[NEW] new
042:[TYPE] Razz
042:[RPAREN] )
042:[SEMICOLON] ;
043:[ID] n
043:[COLON] :
043:[TYPE] Bar
043:[DARROW] =>
043:[ID] n
043:[SEMICOLON] ;
044:[ESAC] esac
044:[SEMICOLON] ;
046:[ID] i
046:[COLON] :
046:[TYPE] Object
046:[ASSIGN] <-
046:[ID] printh
046:[LPAREN] (
046:[RPAREN] )
046:[SEMICOLON] ;
048:[ID] printh
048:[LPAREN] (
048:[RPAREN] )
048:[COLON] :
048:[TYPE] Int
048:[LBRACE] {
048:[LBRACE] {
048:[ID] out_int
048:[LPAREN] (
048:[ID] h
048:[RPAREN] )
048:[SEMICOLON] ;
048:[INTEGER] 0
048:[SEMICOLON] ;
048:[RBRACE] }
048:[RBRACE] }
048:[SEMICOLON] ;
050:[ID] doh
050:[LPAREN] (
050:[RPAREN] )
050:[COLON] :
050:[TYPE] Int
050:[LBRACE] {
050:[LPAREN] (
050:[LET] let
050:[ID] i
050:[COLON] :
050:[TYPE] Int
050:[ASSIGN] <-
050:[ID] h
050:[IN] in
050:[LBRACE] {
050:[ID] h
050:[ASSIGN] <-
050:[ID] h
050:[PLUS] +
050:[INTEGER] 1
050:[SEMICOLON] ;
050:[ID] i
050:[SEMICOLON] ;
050:[RBRACE] }
050:[RPAREN] )
050:[RBRACE] }
050:[SEMICOLON] ;
051:[RBRACE] }
051:[SEMICOLON] ;
054:[CLASS] class
054:[TYPE] Main
054:[LBRACE] {
055:[ID] a
055:[COLON] :
055:[TYPE] Bazz
055:[ASSIGN] <-
055:[NEW] new
055:[TYPE] Bazz
055:[SEMICOLON] ;
056:[ID] b
056:[COLON] :
056:[TYPE] Foo
056:[ASSIGN] <-
056:[NEW] new
056:[TYPE] Foo
056:[SEMICOLON] ;
057:[ID] c
057:[COLON] :
057:[TYPE] Razz
057:[ASSIGN] <-
057:[NEW] new
057:[TYPE] Razz
057:[SEMICOLON] ;
058:[ID] d
058:[COLON] :
058:[TYPE] Bar
058:[ASSIGN] <-
058:[NEW] new
058:[TYPE] Bar
058:[SEMICOLON] ;
060:[ID] main
060:[LPAREN] (
060:[RPAREN] )
060:[COLON] :
060:[TYPE] String
060:[LBRACE] {
060:[STRING] "do nothing"
060:[RBRACE] }
060:[SEMICOLON] ;
062:[RBRACE] }
062:[SEMICOLON] ;
